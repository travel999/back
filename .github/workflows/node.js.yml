name: OORIGACHI CD

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  CI_TEST:
    runs-on: ubuntu-20.04
    
    strategy:
      matrix:
        node-version: ['16.x']

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - run: npm ci
    - name: Create .env file
      run: |
          touch .env
          echo MONGDB=${{ secrets.MONGDB }} >> .env
          echo myKey=${{ secrets.myKey }} >> .env
          echo KAKAOCALLBACKURL=${{ secrets.KAKAOCALLBACKURL }} >> .env
          echo KAKAOCLIENT_ID=${{ secrets.KAKAOCLIENT_ID }} >> .env
          echo KAKAO_SECRETKEY=${{ secrets.KAKAO_SECRETKEY }} >> .env
          echo GOOGLEID=${{ secrets.GOOGLEID }} >> .env
          echo GOOGLEPW=${{ secrets.GOOGLEPW }} >> .env
          echo Port=${{ secrets.Port }} >> .env
          echo NODE_ENV=${{ secrets.NODE_ENV }} >> .env
          echo AWSAccessKeyId=${{ secrets.AWSAccessKeyId }} >> .env
          echo SecretAccessKey=${{ secrets.SecretAccessKey }} >> .env
          echo BUCKET=${{ secrets.BUCKET }} >> .env
          cat .env
    - run: npm test

  
  AUTO_DEPLOY:
    needs: CI_TEST
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
                cd ${{ secrets.TEST_DEPLOY }}
                sudo git pull origin dev
                npm install
                pm2 restart server.js
                


